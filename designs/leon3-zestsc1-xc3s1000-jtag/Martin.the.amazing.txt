Hello Thanassis, Great progress!

Some comments:

GHDL is excellent. It is the best tool for checking VHDL standard
compliance I know about. It is also cool because it generates host
object file which can be linked with other object files, such as
generated by a C compiler. There is an example in designs/leon3-ahbfile.

There is support for installing unisim simulation models from ISE into
the GRLIB tree:
   make distclean
   make install-unisim XILINX=<some-path>/14.7/ISE_DS/ISE/
   make ghdl
   make ghdl-run

So you should not need to patch the Makefile or create your own. The
install-unisim target is documented in either grlib.pdf or guide.pdf.

Intel provides "ModelSim*-IntelÂ® FPGA Starter Edition" without cost
after signing up with them. That is useful for the waveform viewer and
to be able to mix VHDL and Verilog. The non-cost version is
speed-crippled however.

For some eye-candy, you can set the "disas" generic to 1. It will print
disassembly on the simulation terminal. I think there is a similar one
for bus accesses.

One useful feature of GHDL is that it can take top-level generics on the
command line. For example:
   ./testbench -gdisas=1

The Zest SC1 SRAM seems to have some kind of synchronous bus protocol,
so it does not work with the memory controller used in
digilent-xc3s1000. The "GRLIB" way to handle the memory is to write a
memory controller with two interfaces: (1) An AHB slave to the on-chip
AHB bus and (2) the RAM external interface which is connected on the top
level.

It is useful to connect the error output signal to a led.

The top-file leon3mp.vhd does not match the leon3mp.ucf file. The ucf
file tells the synthesis (or place?) tools how to connect the
top-signals to physical pins.

Some terminology which is sometimes confusing because the concepts can
look similar at first:

"DSU" is debug support unit. It has two interfaces: one is an AHB slave
and the other is a special connection with the LEON3 CPU. It can control
CPU internal state. It is in possible to access the DSU AHB registers
from any AHB master.

AHBUART, AHBJTAG, EDCL (Ethernet), etc are "debug communication links".
They have two principal interfaces: One AHB master and one communication
interface connected to the outside world. They generate AHB bus
transactions based on the external protocol. A debug link can access any
bus space on the on-chip buses.
RMAP can also be used as a debug link, as it is an AHB master which
generates bus accesses.

It is possible to have a GRLIB system without a DSU. For example a PCI
peripheral. Such systems work well with GRMON aswell.

The AHBUART transport protocol is documented in grip.pdf, chapter named
AHBUART. The DSU registers are documented in the DSU3 chapter.

GRMON typically starts by reading the very high locations around
0xfffff000 to determine known system and instantiated peripherals (AMBA
Plug&play). That is an important part of the GRMON dynamic architecture.
The 0x55 you see is to sync up the AHBUART which has automatic baud
detection.

Regarding "...patching the make.ghdl file that Jiri's scripts
create...". It would call it a Cobham Gaisler AB script. :-)

Best Regards,

Martin Aberg
Software Engineer
Cobham Gaisler
T : +46 (0) 31 775 86 68
martin.aberg@gaisler.com
